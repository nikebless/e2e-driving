# inputs (image, vectors, etc.)
input:                      torch.Size([8, 3, 96, 96])  max: tensor(1., device='cuda:0') min: tensor(0., device='cuda:0') type: torch.float32

# actions
target:                     torch.Size([8, 2])          max: tensor(0.8526, device='cuda:0') min: tensor(-0.8105, device='cuda:0') type: torch.float32
negatives:                  torch.Size([8, 128, 2])     max: tensor(0.9992, device='cuda:0') min: tensor(-0.9995, device='cuda:0') type: torch.float32

targets with negatives:     torch.Size([8, 129, 2])     max: tensor(0.9992, device='cuda:0') min: tensor(-0.9995, device='cuda:0') type: torch.float32
permutation:                torch.Size([8, 129])        max: tensor(128) min: tensor(0) type: torch.int64
targets after permutation:  torch.Size([8, 129, 2])     max: tensor(0.9992, device='cuda:0') min: tensor(-0.9995, device='cuda:0') type: torch.float32

ground truth:               torch.Size([8])             max: tensor(120, device='cuda:0') min: tensor(41, device='cuda:0') type: torch.int64
output (energy):            torch.Size([8, 129])        max: tensor(0.1081, device='cuda:0', grad_fn=<MaxBackward1>) min: tensor(-0.0767, device='cuda:0', grad_fn=<MinBackward1>) type: torch.float32